RBAC是什么?
    RBAC是基于角色的访问控制(Hole-Based Access Control)在RBAC中,权限与角色相关联，
    用户通过称为适当角色的成员而得到这些角色。
    这就极大的简化了权限的管理。这样管理都是层级相互依赖的,权限赋予给角色,而把角色又赋予给用户,
    这样的权限设计很清楚,管理起来很方便。


    其基本思想是,对系统操作的各种权限不是直接授予具体的用户,而且在用户集合与权限集合之间建立一个
    角色集合。每一种角色对应一组相应的权限。一旦用户被分配了适当的角色后，该用户就拥有此
    角色的所有操作权限。这样做的好处是,不必每次创建用户时都进行分配权限操作,只要分配用户相应的角色即可,
    而且角色的权限比用户的权限变更要少的多,这样将简化用户的权限管理,减少系统的开销。



RBAC: 用户是属于角色的,角色拥有权限的集合。用户属于某个角色,他就具有角色对应的权限。

系统中有张三,李四,他们是普通员工,只能查看数据。
系统中有经理,副经理他们能修改数据。


设计有权限的集合,角色: 经理角色,具有修改数据的权限。删除,查看等等。


普通用户角色: 只读角色,只能看数据,不能修改,删除。

让张三,李四是只读的,普通用户角色,让经理,副经理他们都是经理角色。

公司以后增加新的普通员工,加入到普通用户角色就可以了。不需要再增加新的角色。

公司增加经理了,只要加入到"经理角色"就可以了。





权限: 能对资源的操作,比如增加,修改,删除,查看等等。
角色: 自定义,表示权限的集合。一个角色可以有多个权限。



RBAC设计中表:
    1.用户表:用户认证(登录用到的表)
        用户名,密码,是否启用,是否锁定。

    2.角色表: 定义角色信息
        角色名称,角色的描述。

    3.用户和角色的关系表: 用户和角色是多对多的关系。
        一个用户可以有多个角色,一个角色可以有多个用户。

    4.权限表, 角色和权限的关系表。
        角色可以有哪些权限。

    RBAC可以单独维护,不强制和系统紧密关联。


